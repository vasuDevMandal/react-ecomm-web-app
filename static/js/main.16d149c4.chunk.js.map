{"version":3,"sources":["Constants.js","components/Alert.js","routes/LoginPage.js","routes/MainPage.js","routes/SignupPage.js","App.js","reportWebVitals.js","helperFunctions/Firebase.js","index.js","styles/Registration.module.css"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Alert","React","forwardRef","props","ref","elevation","variant","severity","OutlinedTextInput","styled","OutlinedInput","borderColor","LoginButton","InputLabel","Button","backgroundColor","LoginPage","history","useHistory","useState","email","setEmail","password","setPassword","isPAsswordvisible","setIsPasswordVisible","showSnackbar","setShowSnackbar","snackbarMessage","useRef","Box","className","style","box","Typography","FormControl","formControl","htmlFor","id","value","type","onChange","event","target","startAdornment","InputAdornment","position","Email","label","required","Lock","endAdornment","Visibility","passwordIcon","onClick","prev","VisibilityOff","loginButton","fullWidth","startIcon","Login","current","signInWithEmailAndPassword","getAuth","then","userCredentials","push","catch","error","message","console","log","signupButton","spacing","to","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","sx","width","MainPAge","SignupPage","confirmPassword","setConfirmPassword","AccountCircle","createUserWithEmailAndPassword","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0KAUiBA,G,MAVM,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iB,8LCAFC,EAJDC,IAAMC,YAAW,SAAeC,EAAOC,GACjD,OAAO,cAAC,IAAD,yBAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,GAAvD,IAA8DI,SAAS,c,QC0B5EC,EAAoBC,YAAOC,IAAPD,CAAsB,CAC5C,iDAAiD,CAC7CE,YAAa,aAUfC,GANQH,YAAOI,IAAPJ,CAAmB,CAC7B,mCAAoC,CAChCE,YAAa,aAIDF,YAAOK,IAAPL,CAAe,CAC/BM,gBAAiB,UACjB,UAAY,CACRA,gBAAkB,cAKX,SAASC,EAAUb,GAE9B,IAAMc,EAAUC,cAFqB,EAGXC,mBAAS,IAHE,mBAG9BC,EAH8B,KAGvBC,EAHuB,OAILF,mBAAS,IAJJ,mBAI9BG,EAJ8B,KAIpBC,EAJoB,OAKaJ,oBAAS,GALtB,mBAK9BK,EAL8B,KAKXC,EALW,OAMGN,oBAAS,GANZ,mBAM9BO,EAN8B,KAMhBC,EANgB,KAO/BC,EAAkBC,iBAAO,IAsB/B,OAEI,eAACC,EAAA,EAAD,CAAKC,UAAWC,IAAMC,IAAtB,UACI,cAACC,EAAA,EAAD,CAAY5B,QAAQ,KAApB,mBACA,eAAC6B,EAAA,EAAD,CAAaJ,UAAWC,IAAMI,YAA9B,UACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,2BAApB,mBACA,cAAC3B,EAAA,EAAD,CACA4B,GAAG,4BACHC,MAAOnB,EACPoB,KAAK,QACLC,SAAU,SAACC,GAAUrB,EAASqB,EAAMC,OAAOJ,QAC3CK,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAACC,EAAA,EAAD,MAGRC,MAAM,QACNC,UAAQ,OAIZ,eAACd,EAAA,EAAD,CAAaJ,UAAWC,IAAMI,YAA9B,UACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,8BAApB,sBACA,cAAC7B,EAAD,CACA8B,GAAG,4BACHC,MAAOjB,EACPkB,KAAOhB,EAAoB,OAAS,WACpCiB,SAAU,SAACC,GAAUnB,EAAYmB,EAAMC,OAAOJ,QAC9CK,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAACI,EAAA,EAAD,MAGRC,aACI,cAACN,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACItB,EACE,cAAC4B,EAAA,EAAD,CAAYrB,UAAWC,IAAMqB,aAC3BC,QAAW,kBAAM7B,GAAsB,SAAC8B,GAAD,OAAWA,QAEpD,cAACC,EAAA,EAAD,CAAezB,UAAWC,IAAMqB,aAC9BC,QAAW,kBAAM7B,GAAsB,SAAC8B,GAAD,OAAWA,UAI9DP,MAAM,WACNC,UAAQ,OAGZ,cAACnB,EAAA,EAAD,CAAKC,UAAWC,IAAMyB,YAAtB,SACI,cAAC7C,EAAD,CAAa8C,WAAS,EAACpD,QAAQ,YAAYqD,UAAW,cAACC,EAAA,EAAD,IACtDN,QAtEE,WACV,IAAIlC,IAAUE,EAIV,OAFAM,EAAgBiC,QAAU,kCAC1BlC,GAAgB,GAGpBmC,YAA2BC,cAAY3C,EAAOE,GACzC0C,MAAK,SAACC,GACHhD,EAAQiD,KAAK,QAEhBC,OAAM,SAACC,GACJxC,EAAgBiC,QAAUO,EAAMC,QAChC1C,GAAgB,GAChB2C,QAAQC,IAAIH,OAuDZ,qBAGJ,cAACtC,EAAA,EAAD,CAAKC,UAAWC,IAAMwC,aAAtB,SACI,eAACtC,EAAA,EAAD,CAAY5B,QAAQ,YAApB,mCAEI,sBAAMyB,UAAWC,IAAMyC,UACvB,cAAC,IAAD,CAAMC,GAAG,UAAT,6BAGR,cAACC,EAAA,EAAD,CACIC,KAAMlD,EACNmD,iBAAkB,IAClBC,QAAS,kBAAInD,GAAgB,IAC7BoD,aAAc,CAACC,SAAS,MAAOC,WAAY,SAJ/C,SAMI,cAAC,EAAD,CAAOH,QAAS,kBAAInD,GAAgB,IAAQuD,GAAI,CAACC,MAAM,QAAvD,SACKvD,EAAgBiC,WAPzB,kBCxIG,SAASuB,IACpB,OACI,iD,aC0BF5E,EAAoBC,YAAOC,IAAPD,CAAsB,CAC5C,iDAAiD,CAC7CE,YAAa,aAUfC,GANQH,YAAOI,IAAPJ,CAAmB,CAC7B,mCAAoC,CAChCE,YAAa,aAIDF,YAAOK,IAAPL,CAAe,CAC/BM,gBAAiB,UACjB,UAAY,CACRA,gBAAkB,cAKX,SAASsE,EAAWlF,GAE/B,IAAMc,EAAUC,cAFsB,EAGZC,mBAAS,IAHG,mBAG/BC,EAH+B,KAGxBC,EAHwB,OAINF,mBAAS,IAJH,mBAI/BG,EAJ+B,KAIrBC,EAJqB,OAKQJ,mBAAS,IALjB,mBAK/BmE,EAL+B,KAKdC,EALc,OAMYpE,oBAAS,GANrB,mBAM/BK,EAN+B,KAMZC,EANY,OAOEN,oBAAS,GAPX,mBAO/BO,EAP+B,KAOjBC,EAPiB,KAQhCC,EAAkBC,iBAAO,IAwB/B,OAEI,eAACC,EAAA,EAAD,CAAKC,UAAWC,IAAMC,IAAtB,UACI,cAACC,EAAA,EAAD,CAAY5B,QAAQ,KAApB,oBACA,eAAC6B,EAAA,EAAD,CAAaJ,UAAWC,IAAMI,YAA9B,UACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,2BAApB,mBACA,cAAC3B,EAAA,EAAD,CACA4B,GAAG,4BACHC,MAAOnB,EACPoB,KAAK,QACLC,SAAU,SAACC,GAAUrB,EAASqB,EAAMC,OAAOJ,QAC3CK,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAACC,EAAA,EAAD,MAGRC,MAAM,QACNC,UAAQ,OAIZ,eAACd,EAAA,EAAD,CAAaJ,UAAWC,IAAMI,YAA9B,UACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,8BAApB,sBACA,cAAC,EAAD,CACAC,GAAG,8BACHC,MAAOjB,EACPkB,KAAOhB,EAAoB,OAAS,WACpCiB,SAAU,SAACC,GAAUnB,EAAYmB,EAAMC,OAAOJ,QAC9CK,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAACI,EAAA,EAAD,MAGRC,aACI,cAACN,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACItB,EACE,cAAC4B,EAAA,EAAD,CAAYrB,UAAWC,IAAMqB,aAC3BC,QAAW,kBAAM7B,GAAsB,SAAC8B,GAAD,OAAWA,QAEpD,cAACC,EAAA,EAAD,CAAezB,UAAWC,IAAMqB,aAC9BC,QAAW,kBAAM7B,GAAsB,SAAC8B,GAAD,OAAWA,UAI9DP,MAAM,WACNC,UAAQ,OAIZ,eAACd,EAAA,EAAD,CAAaJ,UAAWC,IAAMI,YAA9B,UACI,cAACvB,EAAA,EAAD,CAAYwB,QAAQ,sCAApB,8BACA,cAAC,EAAD,CACAC,GAAG,sCACHC,MAAO+C,EACP9C,KAAM,WACNC,SAAU,SAACC,GAAU6C,EAAmB7C,EAAMC,OAAOJ,QACrDK,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAACI,EAAA,EAAD,MAGRF,MAAM,mBACNC,UAAQ,OAIZ,cAACnB,EAAA,EAAD,CAAKC,UAAWC,IAAMyB,YAAtB,SACI,cAAC,EAAD,CAAaC,WAAS,EAACpD,QAAQ,YAAYqD,UAAW,cAAC6B,EAAA,EAAD,IACtDlC,QA1FG,WACX,OAAIlC,GAAUE,GAAagE,EAKxBhE,IAAagE,GACZ1D,EAAgBiC,QAAU,kDAC1BlC,GAAgB,SAGpB8D,YAA+B1B,cAAW3C,EAAOE,GAChD0C,MAAK,SAACC,GACHhD,EAAQiD,KAAK,QAEhBC,OAAM,SAACC,GACJzC,GAAgB,GAChB2C,QAAQC,IAAIH,OAfZxC,EAAgBiC,QAAU,kCAC1BlC,GAAgB,KAsFZ,sBAGJ,cAACG,EAAA,EAAD,CAAKC,UAAWC,IAAMwC,aAAtB,SACI,eAACtC,EAAA,EAAD,CAAY5B,QAAQ,YAApB,qCAEI,sBAAMyB,UAAWC,IAAMyC,UACvB,cAAC,IAAD,CAAMC,GAAG,SAAT,wBAGR,cAACC,EAAA,EAAD,CACIC,KAAMlD,EACNmD,iBAAkB,IAClBC,QAAS,kBAAInD,GAAgB,IAC7BoD,aAAc,CAACC,SAAS,MAAOC,WAAY,SAJ/C,SAMI,cAAC,EAAD,CAAOH,QAAS,kBAAInD,GAAgB,IAAQuD,GAAI,CAACC,MAAM,QAAvD,SACKvD,EAAgBiC,WAPzB,kBC5IG6B,MAbf,WACE,OACI,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,UAAY,kBAAM,cAAC7E,EAAD,OAC7C,cAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,UAAUC,UAAY,kBAAM,cAACR,EAAD,aCAzCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFVO,YAAc9G,GCGlB+G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBCjBAc,EAAOC,QAAU,CAAC,IAAM,0BAA0B,YAAc,kCAAkC,aAAe,mCAAmC,YAAc,kCAAkC,aAAe,mCAAmC,QAAU,iC","file":"static/js/main.16d149c4.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyC19ug2_YVcSIx2AOFnh_aPS6a52i51S8k\",\r\n  authDomain: \"react-ecomm-b67a7.firebaseapp.com\",\r\n  projectId: \"react-ecomm-b67a7\",\r\n  storageBucket: \"react-ecomm-b67a7.appspot.com\",\r\n  messagingSenderId: \"13409015211\",\r\n  appId: \"1:13409015211:web:87b01938c24bb8a971eeee\",\r\n  measurementId: \"G-W2040K0TMM\"\r\n  };\r\n\r\n  export default firebaseConfig;","import React from 'react';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref){\r\n    return <MuiAlert elevation={6} ref={ref} variant='filled' {...props} severity=\"error\"/>\r\n})\r\n\r\nexport default Alert;","import React ,{useState , useRef} from 'react';\r\nimport {\r\n    Box,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Snackbar,\r\n    Typography,\r\n    styled\r\n} from '@mui/material';\r\n\r\nimport {\r\n    Email,\r\n    Lock,\r\n    Visibility,\r\n    VisibilityOff,\r\n    Login\r\n} from '@mui/icons-material';\r\n\r\nimport style from '../styles/Registration.module.css';\r\nimport Alert from '../components/Alert';\r\n\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\n\r\nconst OutlinedTextInput = styled(OutlinedInput)({\r\n    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\":{\r\n        borderColor: \"#0088a9\"\r\n    },\r\n});\r\n\r\nconst Label = styled(InputLabel)({\r\n    \"&.MuiinputLabel-root.Mui-focused\" :{\r\n        borderColor: \"#df5689\"\r\n    },\r\n});\r\n\r\nconst LoginButton = styled(Button)({\r\n    backgroundColor: \"#434569\",\r\n    \"&:hover\" : { \r\n        backgroundColor : \"#434569\" \r\n    },\r\n});\r\n\r\n\r\nexport default function LoginPage(props) {\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isPAsswordvisible, setIsPasswordVisible] = useState(false);\r\n    const [showSnackbar, setShowSnackbar] = useState(false);\r\n    const snackbarMessage = useRef(\"\");\r\n\r\n    const login = ()=>{\r\n        if(!email || !password){\r\n            // alert('invalid')\r\n            snackbarMessage.current = \"email or password is empty\";\r\n            setShowSnackbar(true);\r\n            return; \r\n        }\r\n        signInWithEmailAndPassword(getAuth() , email, password )\r\n            .then((userCredentials)=>{\r\n                history.push(\"/\")\r\n            })\r\n            .catch((error)=>{\r\n                snackbarMessage.current = error.message;\r\n                setShowSnackbar(true);\r\n                console.log(error);\r\n                return; \r\n                }\r\n            );\r\n    }\r\n\r\n    return (\r\n    \r\n        <Box className={style.box}>\r\n            <Typography variant=\"h4\">Login</Typography>\r\n            <FormControl className={style.formControl}>\r\n                <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n                <OutlinedInput \r\n                id=\"outlined-adornment-amount\"\r\n                value={email}\r\n                type='email'\r\n                onChange={(event)=>{ setEmail(event.target.value)} }\r\n                startAdornment={\r\n                    <InputAdornment position='start'>\r\n                        <Email />\r\n                    </InputAdornment>\r\n                }\r\n                label='Email'\r\n                required\r\n                ></OutlinedInput>\r\n            </FormControl>\r\n\r\n            <FormControl className={style.formControl}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                <OutlinedTextInput \r\n                id=\"outlined-adornment-amount\"\r\n                value={password}\r\n                type={ isPAsswordvisible ? \"text\" : \"password\"}\r\n                onChange={(event)=>{ setPassword(event.target.value)} }\r\n                startAdornment={\r\n                    <InputAdornment position='start'>\r\n                        <Lock />\r\n                    </InputAdornment>\r\n                }\r\n                endAdornment={\r\n                    <InputAdornment position='end'>\r\n                       {isPAsswordvisible ? \r\n                        ( <Visibility className={style.passwordIcon} \r\n                            onClick= { () => setIsPasswordVisible( (prev) => !prev ) } /> \r\n                            ) : \r\n                        ( <VisibilityOff className={style.passwordIcon} \r\n                            onClick= { () => setIsPasswordVisible( (prev) => !prev ) }/> )\r\n                       }  \r\n                    </InputAdornment>\r\n                }\r\n                label='Password'\r\n                required\r\n                ></OutlinedTextInput>\r\n            </FormControl>\r\n            <Box className={style.loginButton}>\r\n                <LoginButton fullWidth variant=\"contained\" startIcon={<Login />} \r\n                onClick={login}>Login</LoginButton>\r\n            </Box>\r\n            <Box className={style.signupButton}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Don't have an account?\r\n                    <span className={style.spacing}></span>\r\n                    <Link to=\"/signup\">Signup now</Link>\r\n                </Typography>\r\n            </Box>\r\n            <Snackbar \r\n                open={showSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={()=>setShowSnackbar(false)}\r\n                anchorOrigin={{vertical:'top', horizontal: 'right'}}\r\n                key={`top + right`} >\r\n                <Alert onClose={()=>setShowSnackbar(false)} sx={{width:\"100%\"}}> \r\n                    {snackbarMessage.current}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function MainPAge() {\r\n    return (\r\n        <div>\r\n            ecommerce page\r\n        </div>\r\n    )\r\n}\r\n","import React ,{useState , useRef} from 'react';\r\nimport {\r\n    Box,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Snackbar,\r\n    Typography,\r\n    styled\r\n} from '@mui/material';\r\n\r\nimport {\r\n    Email,\r\n    Lock,\r\n    Visibility,\r\n    VisibilityOff,\r\n    Login,\r\n    AccountCircle\r\n} from '@mui/icons-material';\r\n\r\nimport style from '../styles/Registration.module.css';\r\nimport Alert from '../components/Alert';\r\n\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\n\r\nconst OutlinedTextInput = styled(OutlinedInput)({\r\n    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\":{\r\n        borderColor: \"#0088a9\"\r\n    },\r\n});\r\n\r\nconst Label = styled(InputLabel)({\r\n    \"&.MuiinputLabel-root.Mui-focused\" :{\r\n        borderColor: \"#df5689\"\r\n    },\r\n});\r\n\r\nconst LoginButton = styled(Button)({\r\n    backgroundColor: \"#434569\",\r\n    \"&:hover\" : { \r\n        backgroundColor : \"#434569\" \r\n    },\r\n});\r\n\r\n\r\nexport default function SignupPage(props) {\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [isPAsswordvisible, setIsPasswordVisible] = useState(false);\r\n    const [showSnackbar, setShowSnackbar] = useState(false);\r\n    const snackbarMessage = useRef(\"\");\r\n\r\n    const signup = ()=>{\r\n        if(!email || !password || !confirmPassword){\r\n            snackbarMessage.current = \"email or password is empty\";\r\n            setShowSnackbar(true);\r\n            return;\r\n        }\r\n        if(password !== confirmPassword){\r\n            snackbarMessage.current = \"password & confirm password does not match\";\r\n            setShowSnackbar(true);\r\n            return;\r\n        }\r\n        createUserWithEmailAndPassword(getAuth(), email ,password)\r\n        .then((userCredentials)=>{\r\n            history.push(\"/\");\r\n        })\r\n        .catch((error)=>{\r\n            setShowSnackbar(true);\r\n            console.log(error);\r\n            return;\r\n        });\r\n    }\r\n\r\n    return (\r\n    \r\n        <Box className={style.box}>\r\n            <Typography variant=\"h4\">Signup</Typography>\r\n            <FormControl className={style.formControl}>\r\n                <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n                <OutlinedInput \r\n                id=\"outlined-adornment-amount\"\r\n                value={email}\r\n                type='email'\r\n                onChange={(event)=>{ setEmail(event.target.value)} }\r\n                startAdornment={\r\n                    <InputAdornment position='start'>\r\n                        <Email />\r\n                    </InputAdornment>\r\n                }\r\n                label='Email'\r\n                required\r\n                ></OutlinedInput>\r\n            </FormControl>\r\n\r\n            <FormControl className={style.formControl}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                <OutlinedTextInput \r\n                id=\"outlined-adornment-password\"\r\n                value={password}\r\n                type={ isPAsswordvisible ? \"text\" : \"password\"}\r\n                onChange={(event)=>{ setPassword(event.target.value)} }\r\n                startAdornment={\r\n                    <InputAdornment position='start'>\r\n                        <Lock />\r\n                    </InputAdornment>\r\n                }\r\n                endAdornment={\r\n                    <InputAdornment position='end'>\r\n                       {isPAsswordvisible ? \r\n                        ( <Visibility className={style.passwordIcon} \r\n                            onClick= { () => setIsPasswordVisible( (prev) => !prev ) } /> \r\n                            ) : \r\n                        ( <VisibilityOff className={style.passwordIcon} \r\n                            onClick= { () => setIsPasswordVisible( (prev) => !prev ) }/> )\r\n                       }  \r\n                    </InputAdornment>\r\n                }\r\n                label='Password'\r\n                required\r\n                ></OutlinedTextInput>\r\n            </FormControl>\r\n\r\n            <FormControl className={style.formControl}>\r\n                <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n                <OutlinedTextInput \r\n                id=\"outlined-adornment-confirm-password\"\r\n                value={confirmPassword}\r\n                type={\"password\"}\r\n                onChange={(event)=>{ setConfirmPassword(event.target.value)} }\r\n                startAdornment={\r\n                    <InputAdornment position='start'>\r\n                        <Lock />\r\n                    </InputAdornment>\r\n                }\r\n                label='Confirm Password'\r\n                required\r\n                ></OutlinedTextInput>\r\n            </FormControl>\r\n\r\n            <Box className={style.loginButton}>\r\n                <LoginButton fullWidth variant=\"contained\" startIcon={<AccountCircle />} \r\n                onClick={signup}>signup</LoginButton>\r\n            </Box>\r\n            <Box className={style.signupButton}>\r\n                <Typography variant=\"subtitle1\">\r\n                    Already have an account?\r\n                    <span className={style.spacing}></span>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </Typography>\r\n            </Box>\r\n            <Snackbar \r\n                open={showSnackbar}\r\n                autoHideDuration={6000}\r\n                onClose={()=>setShowSnackbar(false)}\r\n                anchorOrigin={{vertical:'top', horizontal: 'right'}}\r\n                key={`top + right`} >\r\n                <Alert onClose={()=>setShowSnackbar(false)} sx={{width:\"100%\"}}> \r\n                    {snackbarMessage.current}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Box>\r\n    )\r\n}","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport LoginPage from './routes/LoginPage';\nimport MainPage from './routes/MainPage';\nimport SignupPage from './routes/SignupPage';\n\n\nfunction App() {\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ () => <MainPage /> } />\n          <Route exact path=\"/login\" component={ () => <LoginPage /> } />\n          <Route exact path=\"/signup\" component={ () => <SignupPage /> } />\n        </Switch>\n      </Router>\n      // <LoginPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {initializeApp} from 'firebase/app';\r\nimport {getFirestore} from 'firebase/firestore';\r\nimport firebaseConfig from '../Constants'\r\n\r\nconst initializeFirebase = () => {\r\n    initializeApp(firebaseConfig)\r\n}\r\n\r\nconst initializeFirestore = () => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const db = getFirestore(app);\r\n    return db;\r\n}\r\n\r\nexport { initializeFirebase, initializeFirestore}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {initializeFirebase} from './helperFunctions/Firebase'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\ninitializeFirebase();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Registration_box__kKKVL\",\"formControl\":\"Registration_formControl__2K6Xq\",\"passwordIcon\":\"Registration_passwordIcon__2r5a2\",\"loginButton\":\"Registration_loginButton__3T8B2\",\"signupButton\":\"Registration_signupButton__Rl9cG\",\"spacing\":\"Registration_spacing__27CF5\"};"],"sourceRoot":""}